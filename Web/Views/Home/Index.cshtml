@using HomeControl.Shared.Model
@using Humanizer
@using Raven.Abstractions.Extensions
@model Web.Models.HomeControllerIndexModel
@{
    ViewBag.Title = "Home Page";
}

<div class="row">
    <div class="col-md-6">
        <h2>Online</h2>
        <table class="table table-hover table-responsive table-striped">
            <thead>
            <tr>
                <th>Gerät</th>
                <th>Onlinestatus</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var deviceConfig in Model.DeviceConfigsOnline)
            {
                <tr>
                    <td>@deviceConfig.Hostname</td>
                    <td>@if (deviceConfig.ConsideredOnline)
                        {
                            <span class="label label-success">online</span>
                        }
                        else
                        {
                            <span class="label label-danger">offline</span>
                        }</td>
                    <td>
                        @foreach (var ledConfig in deviceConfig.LedOnOffSwitchConfigurations)
                        {
                            var currentState = deviceConfig.LedStatesByPinNumber.GetOrDefault(ledConfig.PinNumber);

                            using (Html.BeginForm("SetLight", "Home"))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("DeviceName", deviceConfig.Hostname)
                                @Html.Hidden("DesiredState", !currentState)
                                @Html.Hidden("PinNumber", ledConfig.PinNumber)

                                if (currentState)
                                {
                                    <button type="submit" class="btn btn-success">@ledConfig.Name</button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-danger">@ledConfig.Name</button>
                                }
                            }

                            if (deviceConfig.PowerStateControllable)
                            {
                                @Html.ActionLink("Standby", "TransitionPowerState"
                                    , new {DeviceName = deviceConfig.Hostname, DesiredPowerState = PowerStateEnum.Standby}
                                    , new {@class = "btn btn-warning"})

                                @Html.ActionLink("Shutdown", "TransitionPowerState"
                                    , new {DeviceName = deviceConfig.Hostname, DesiredPowerState = PowerStateEnum.Shutdown}
                                    , new {@class = "btn btn-warning"})
                            }
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <div class="col-md-6">
        <h2>Offline</h2>
        <table class="table table-hover table-responsive table-striped">
            <thead>
            <tr>
                <th>Gerät</th>
                <th>Zuletzt Online</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var deviceConfig in Model.DeviceConfigsOffline)
            {
                <tr>
                    <td>@deviceConfig.Hostname</td>
                    <td>@deviceConfig.LastOnlineTime.Humanize()</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>
